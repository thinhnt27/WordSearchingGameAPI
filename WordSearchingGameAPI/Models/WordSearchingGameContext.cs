// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;

namespace WordSearchingGameAPI.Models;

public partial class WordSearchingGameContext : DbContext
{
    public WordSearchingGameContext(DbContextOptions<WordSearchingGameContext> options)
        : base(options)
    {
    }

    public virtual DbSet<Difficulty> Difficulties { get; set; }

    public virtual DbSet<Level> Levels { get; set; }

    public virtual DbSet<Topic> Topics { get; set; }

    public virtual DbSet<User> Users { get; set; }

    public virtual DbSet<UserProgress> UserProgresses { get; set; }

    public virtual DbSet<Word> Words { get; set; }

    protected override void OnModelCreating(ModelBuilder modelBuilder)
    {
        modelBuilder.Entity<Difficulty>(entity =>
        {
            entity.HasKey(e => e.DifficultyId).HasName("PK__Difficul__161A32071A8BFBBD");

            entity.Property(e => e.DifficultyId).HasColumnName("DifficultyID");
            entity.Property(e => e.DifficultyLevel)
                .IsRequired()
                .HasMaxLength(50);
        });

        modelBuilder.Entity<Level>(entity =>
        {
            entity.HasKey(e => e.LevelId).HasName("PK__Levels__09F03C0674FE7E83");

            entity.Property(e => e.LevelId).HasColumnName("LevelID");
            entity.Property(e => e.DifficultyId).HasColumnName("DifficultyID");
            entity.Property(e => e.TopicId).HasColumnName("TopicID");

            entity.HasOne(d => d.Difficulty).WithMany(p => p.Levels)
                .HasForeignKey(d => d.DifficultyId)
                .HasConstraintName("FK__Levels__Difficul__44FF419A");

            entity.HasOne(d => d.Topic).WithMany(p => p.Levels)
                .HasForeignKey(d => d.TopicId)
                .HasConstraintName("FK__Levels__TopicID__440B1D61");
        });

        modelBuilder.Entity<Topic>(entity =>
        {
            entity.HasKey(e => e.TopicId).HasName("PK__Topics__022E0F7DB8198B8A");

            entity.Property(e => e.TopicId).HasColumnName("TopicID");
            entity.Property(e => e.TopicName)
                .IsRequired()
                .HasMaxLength(100);
        });

        modelBuilder.Entity<User>(entity =>
        {
            entity.HasKey(e => e.UserId).HasName("PK__Users__1788CCACD019CB30");

            entity.HasIndex(e => e.Username, "UQ__Users__536C85E4EC264814").IsUnique();

            entity.HasIndex(e => e.Email, "UQ__Users__A9D10534364F1BA6").IsUnique();

            entity.Property(e => e.UserId).HasColumnName("UserID");
            entity.Property(e => e.DateJoined)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime");
            entity.Property(e => e.Email)
                .IsRequired()
                .HasMaxLength(100);
            entity.Property(e => e.PasswordHash)
                .IsRequired()
                .HasMaxLength(255);
            entity.Property(e => e.Username)
                .IsRequired()
                .HasMaxLength(50);
        });

        modelBuilder.Entity<UserProgress>(entity =>
        {
            entity.HasKey(e => e.ProgressId).HasName("PK__UserProg__BAE29C8551A1DE93");

            entity.ToTable("UserProgress");

            entity.Property(e => e.ProgressId).HasColumnName("ProgressID");
            entity.Property(e => e.Completed).HasDefaultValue(false);
            entity.Property(e => e.CompletionTime).HasColumnType("datetime");
            entity.Property(e => e.LevelId).HasColumnName("LevelID");
            entity.Property(e => e.UserId).HasColumnName("UserID");

            entity.HasOne(d => d.Level).WithMany(p => p.UserProgresses)
                .HasForeignKey(d => d.LevelId)
                .HasConstraintName("FK__UserProgr__Level__49C3F6B7");

            entity.HasOne(d => d.User).WithMany(p => p.UserProgresses)
                .HasForeignKey(d => d.UserId)
                .HasConstraintName("FK__UserProgr__UserI__48CFD27E");
        });

        modelBuilder.Entity<Word>(entity =>
        {
            entity.HasKey(e => e.WordId).HasName("PK__Words__2C20F0469B6992E0");

            entity.Property(e => e.WordId).HasColumnName("WordID");
            entity.Property(e => e.DifficultyId).HasColumnName("DifficultyID");
            entity.Property(e => e.TopicId).HasColumnName("TopicID");
            entity.Property(e => e.Word1)
                .IsRequired()
                .HasMaxLength(50)
                .HasColumnName("Word");

            entity.HasOne(d => d.Difficulty).WithMany(p => p.Words)
                .HasForeignKey(d => d.DifficultyId)
                .HasConstraintName("FK__Words__Difficult__412EB0B6");

            entity.HasOne(d => d.Topic).WithMany(p => p.Words)
                .HasForeignKey(d => d.TopicId)
                .HasConstraintName("FK__Words__TopicID__403A8C7D");
        });

        OnModelCreatingPartial(modelBuilder);
    }

    partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
}